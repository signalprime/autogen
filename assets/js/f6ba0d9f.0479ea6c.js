"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1689],{36398:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=s(85893),t=s(11151);const i={sidebar_label:"browser_utils",title:"browser_utils"},l=void 0,o={id:"reference/browser_utils",title:"browser_utils",description:"SimpleTextBrowser",source:"@site/docs/reference/browser_utils.md",sourceDirName:"reference",slug:"/reference/browser_utils",permalink:"/autogen/docs/reference/browser_utils",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/browser_utils.md",tags:[],version:"current",frontMatter:{sidebar_label:"browser_utils",title:"browser_utils"},sidebar:"referenceSideBar",previous:{title:"openai_utils",permalink:"/autogen/docs/reference/oai/openai_utils"},next:{title:"code_utils",permalink:"/autogen/docs/reference/code_utils"}},a={},d=[{value:"SimpleTextBrowser",id:"simpletextbrowser",level:2},{value:"address",id:"address",level:3},{value:"viewport",id:"viewport",level:3},{value:"page_content",id:"page_content",level:3},{value:"set_page_content",id:"set_page_content",level:3},{value:"visit_page",id:"visit_page",level:3},{value:"get_scheme",id:"get_scheme",level:3},{value:"get_domain",id:"get_domain",level:3},{value:"get_path",id:"get_path",level:3},{value:"get_last_path",id:"get_last_path",level:3},{value:"github_path_rule",id:"github_path_rule",level:3},{value:"default_path_rule",id:"default_path_rule",level:3},{value:"get_file_path_from_url",id:"get_file_path_from_url",level:3},{value:"fix_missing_protocol",id:"fix_missing_protocol",level:3},{value:"extract_pdf_text",id:"extract_pdf_text",level:3},{value:"download_using_requests",id:"download_using_requests",level:3},{value:"display_binary_image",id:"display_binary_image",level:3},{value:"generate_png_filename",id:"generate_png_filename",level:3},{value:"SeleniumBrowser",id:"seleniumbrowser",level:3},{value:"SeleniumBrowserWrapper",id:"seleniumbrowserwrapper",level:2},{value:"address",id:"address-1",level:3},{value:"viewport",id:"viewport-1",level:3},{value:"page_content",id:"page_content-1",level:3},{value:"set_address",id:"set_address",level:3},{value:"visit_page",id:"visit_page-1",level:3},{value:"page_down",id:"page_down",level:3},{value:"page_up",id:"page_up",level:3},{value:"close",id:"close",level:3},{value:"set_page_content",id:"set_page_content-1",level:3},{value:"download",id:"download",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"simpletextbrowser",children:"SimpleTextBrowser"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class SimpleTextBrowser()\n"})}),"\n",(0,r.jsx)(n.p,{children:"(In preview) An extremely simple text-based web browser comparable to Lynx. Suitable for Agentic use."}),"\n",(0,r.jsx)(n.h3,{id:"address",children:"address"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@property\ndef address() -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return the address of the current page."}),"\n",(0,r.jsx)(n.h3,{id:"viewport",children:"viewport"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@property\ndef viewport() -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return the content of the current viewport."}),"\n",(0,r.jsx)(n.h3,{id:"page_content",children:"page_content"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@property\ndef page_content() -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return the full contents of the current page."}),"\n",(0,r.jsx)(n.h3,{id:"set_page_content",children:"set_page_content"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def set_page_content(content: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the text content of the current page."}),"\n",(0,r.jsx)(n.h3,{id:"visit_page",children:"visit_page"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def visit_page(path_or_uri: str) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Update the address, visit the page, and return the content of the viewport."}),"\n",(0,r.jsx)(n.h3,{id:"get_scheme",children:"get_scheme"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_scheme(url: Union[str, ParseResult]) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Extracts the scheme component from a given URL."}),"\n",(0,r.jsx)(n.p,{children:"This function supports both string URLs and ParseResult objects. For string URLs, it parses\nthe URL and extracts the scheme part. For ParseResult objects, it directly accesses the scheme attribute."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," ",(0,r.jsx)(n.em,{children:"Union[str, ParseResult]"})," - The URL from which to extract the scheme. Can be a string or a ParseResult object."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"})," - The scheme of the URL (e.g., 'http', 'https')."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"get_domain",children:"get_domain"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_domain(url: Union[str, ParseResult]) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the domain (network location) component from a URL."}),"\n",(0,r.jsxs)(n.p,{children:["Similar to ",(0,r.jsx)(n.code,{children:"get_scheme"}),", this function can handle both string representations of URLs and\nParseResult objects. It extracts the network location part from the URL."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," ",(0,r.jsx)(n.em,{children:"Union[str, ParseResult]"})," - The URL from which to extract the domain. Can be a string or a ParseResult object."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"})," - The domain of the URL (e.g., '",(0,r.jsx)(n.a,{href:"http://www.example.com",children:"www.example.com"}),"')."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"get_path",children:"get_path"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_path(url: Union[str, ParseResult]) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Extracts the path component from a URL."}),"\n",(0,r.jsx)(n.p,{children:"This function processes both strings and ParseResult objects to return the path segment of the URL.\nThe path is the part of the URL that follows the domain but precedes any query parameters or fragment identifiers."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," ",(0,r.jsx)(n.em,{children:"Union[str, ParseResult]"})," - The URL from which to extract the path. Can be a string or a ParseResult object."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"})," - The path of the URL (e.g., '/path/to/resource')."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"get_last_path",children:"get_last_path"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_last_path(url: Union[str, ParseResult]) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the last component of the path from a URL."}),"\n",(0,r.jsx)(n.p,{children:"This function is useful for extracting the final part of the path, often representing a specific resource or page.\nIt handles both string URLs and ParseResult objects. For string URLs, it parses the URL to extract the path and then\nretrieves the last component."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," ",(0,r.jsx)(n.em,{children:"Union[str, ParseResult]"})," - The URL from which to extract the last path component. Can be a string or a ParseResult object."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"})," - The last component of the path (e.g., 'resource.html')."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"github_path_rule",children:"github_path_rule"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def github_path_rule(parsed_url: ParseResult) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Specific rule for GitHub URLs."}),"\n",(0,r.jsx)(n.h3,{id:"default_path_rule",children:"default_path_rule"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def default_path_rule(parsed_url: ParseResult) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Fallback rule for general URLs."}),"\n",(0,r.jsx)(n.h3,{id:"get_file_path_from_url",children:"get_file_path_from_url"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_file_path_from_url(\n        url: Union[str, ParseResult],\n        domain_rules: Optional[Dict[str, Callable[[ParseResult], str]]] = None,\n        default_path_rule: Optional[Callable[[ParseResult],\n                                             str]] = None) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Converts a URL into a corresponding local file path, allowing for domain-specific customization."}),"\n",(0,r.jsx)(n.p,{children:"This function takes a URL, either as a string or a ParseResult object, and generates a path that represents\nthe URL's location in a hypothetical local file system structure. It supports domain-specific rules for\ncustomizable path generation, with a default rule applied to URLs from domains not explicitly configured."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," ",(0,r.jsx)(n.em,{children:"Union[str, ParseResult]"})," - The URL to be converted into a local file path."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"domain_rules"})," ",(0,r.jsx)(n.em,{children:"Optional[Dict[str, Callable[[ParseResult], str]]]"})," - A dictionary mapping domains to functions\nthat define how to construct file paths for URLs from those domains."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"default_path_rule"})," ",(0,r.jsx)(n.em,{children:"Optional[Callable[[ParseResult], str]]"})," - A function to construct file paths for URLs\nfrom domains not covered by ",(0,r.jsx)(n.code,{children:"domain_rules"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"})," - The generated local file path, which omits the protocol and optionally adjusts for specific domain structures."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"fix_missing_protocol",children:"fix_missing_protocol"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def fix_missing_protocol(img_url: str, source_url: str) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ensures that an image URL has a proper protocol specified, using the protocol of a source URL as a reference."}),"\n",(0,r.jsx)(n.p,{children:"This function checks if the given image URL lacks a protocol (http or https) and, if so, fixes the URL by\nprepending it with the protocol from the source URL. This is useful for fixing relative URLs or those missing\na scheme."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"img_url"})," ",(0,r.jsx)(n.em,{children:"str"})," - The image URL to be corrected. It can be a relative URL or one missing a protocol."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"source_url"})," ",(0,r.jsx)(n.em,{children:"str"})," - The source URL from which to extract the protocol and, if necessary, the domain."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"})," - The corrected image URL with a protocol."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Notes"}),":"]}),"\n",(0,r.jsxs)(n.p,{children:['The function handles URLs starting with "//" by directly adding the protocol. If the domain is missing\nfrom ',(0,r.jsx)(n.code,{children:"img_url"}),", the function constructs the full URL using the protocol and domain from ",(0,r.jsx)(n.code,{children:"source_url"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"extract_pdf_text",children:"extract_pdf_text"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def extract_pdf_text(local_pdf_path: str)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Extracts the text content from a local PDF file and returns it as a string."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"local_pdf_path (str): The path to the local PDF file from which the text will be extracted."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"str: A string containing the text content of the provided PDF file."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"download_using_requests",children:"download_using_requests"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def download_using_requests(driver: Union[\n    webdriver.edge.webdriver.WebDriver, webdriver.firefox.webdriver.WebDriver,\n    webdriver.chrome.webdriver.WebDriver], download_url: str,\n                            save_path: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"This function takes a Selenium WebDriver instance, a URL to download a file, and a path where you want to save the downloaded file."}),"\n",(0,r.jsxs)(n.p,{children:["It first retrieves cookies from the given driver, converts them into a format suitable for use with the ",(0,r.jsx)(n.code,{children:"requests"})," library, and then uses these cookies to successfully download the specified file using the ",(0,r.jsx)(n.code,{children:"requests.get()"})," function. The ",(0,r.jsx)(n.code,{children:"User-Agent"})," header is also set to match that used by the WebDriver instance."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"driver"})," ",(0,r.jsx)(n.em,{children:"webdriver.edge.webdriver.WebDriver"})," - A Selenium WebDriver instance, typically obtained from selenium.webdriver.Edge() or another appropriate method for your browser of choice."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"download_url"})," ",(0,r.jsx)(n.em,{children:"str"})," - The URL to the file you want to download."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"save_path"})," ",(0,r.jsx)(n.em,{children:"str"})," - The path where you would like the downloaded file to be saved."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"None, but successfully downloads a file from the given URL using the cookies and headers obtained from the WebDriver instance."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Raises"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Exception"})," - If the file cannot be downloaded due to an error in the ",(0,r.jsx)(n.code,{children:"requests.get()"})," call."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"display_binary_image",children:"display_binary_image"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def display_binary_image(binary_data)\n"})}),"\n",(0,r.jsx)(n.p,{children:"display_binary_image(binary_data):\nThis function displays the binary image data in Jupyter notebook cells or shows it in non-notebook environments."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"binary_data (bytes): A bytes object containing the PNG image data."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nothing, but in non-notebook environment, it displays the image."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"generate_png_filename",children:"generate_png_filename"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def generate_png_filename(url: str)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Generates a PNG filename based on the provided URL, along with a small random hash."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," ",(0,r.jsx)(n.em,{children:"str"})," - The URL from which to create a filename."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"})," - A unique PNG filename based on the URL and a random hash."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"seleniumbrowser",children:"SeleniumBrowser"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def SeleniumBrowser(**kwargs)\n"})}),"\n",(0,r.jsx)(n.p,{children:"This function launches a headless Selenium browser based on the specified 'browser'. The available options are 'edge', 'firefox', and 'chrome'."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"browser"})," ",(0,r.jsx)(n.em,{children:"str"})," - A string specifying which browser to launch. Defaults to 'firefox'."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"download_dir"})," ",(0,r.jsx)(n.em,{children:"str"})," - A path to where downloaded files are stored.  Defaults to None"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resolution"})," ",(0,r.jsx)(n.em,{children:"tuple"})," - A tuple of size 2 for screen resolution in the order of width and height.  Defaults to (1920,1080)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"webdriver"})," - An instance of the Selenium WebDriver based on the specified browser.  User can open a new page by ",(0,r.jsx)(n.code,{children:"webdriver.get('https://www.microsoft.com')"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"seleniumbrowserwrapper",children:"SeleniumBrowserWrapper"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class SeleniumBrowserWrapper()\n"})}),"\n",(0,r.jsx)(n.p,{children:"SeleniumBrowserWrapper class is a wrapper that manages the interaction with a Selenium web driver.\nIt provides methods to control the browser, set up the viewport size, and download files."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'start_page (Optional[str]): The initial URL of the web page to load. Defaults to "about:blank".'}),"\n",(0,r.jsx)(n.li,{children:"viewport_size (Optional[int]): The width of the viewport in pixels. Defaults to 1024 * 8."}),"\n",(0,r.jsxs)(n.li,{children:["downloads_folder (Optional[Union[str, None]]): The directory where downloaded files will be saved. If set to ",(0,r.jsx)(n.code,{children:"None"}),", default downloads folder will be used."]}),"\n",(0,r.jsx)(n.li,{children:"bing_api_key (Optional[Union[str, None]]): The API key for Bing search engine."}),"\n",(0,r.jsx)(n.li,{children:"request_kwargs (Optional[Union[Dict[str, Any], None]]): Additional keyword arguments that can be passed for customization."}),"\n",(0,r.jsx)(n.li,{children:"web_driver (Optional[str]): The type of web driver to use. Defaults to 'edge'."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Attributes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"start_page (str): The initial URL of the web page to load."}),"\n",(0,r.jsx)(n.li,{children:"viewport_size (int): The width of the viewport in pixels."}),"\n",(0,r.jsx)(n.li,{children:"downloads_folder (Union[str, None]): The directory where downloaded files will be saved."}),"\n",(0,r.jsx)(n.li,{children:"history (List[str]): A list containing the URLs visited by the browser."}),"\n",(0,r.jsx)(n.li,{children:"page_title (Optional[str]): The title of the current web page."}),"\n",(0,r.jsx)(n.li,{children:"viewport_current_page (int): The index of the current web page in relation to all pages loaded."}),"\n",(0,r.jsx)(n.li,{children:"viewport_pages (List[Tuple[int, int]]): A list containing tuples of width and height for each viewed web page."}),"\n",(0,r.jsx)(n.li,{children:"bing_api_key (Optional[str]): The API key for Bing search engine."}),"\n",(0,r.jsx)(n.li,{children:"request_kwargs (Optional[Union[Dict[str, Any], None]]): Additional keyword arguments passed during instantiation."}),"\n",(0,r.jsx)(n.li,{children:"_page_content (str): The content of the current web page."}),"\n",(0,r.jsx)(n.li,{children:"driver: An instance of SeleniumBrowser class that manages the browser interaction."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Notes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Viewport Size and Pages: The concept of viewport size and pagination doesn't directly apply to Selenium as it does in a text-based browser. Selenium interacts with the whole page. However, actions like scrolling can be simulated."}),"\n",(0,r.jsx)(n.li,{children:"Downloads Folder: This is handled through ChromeOptions if you need to set a default download directory."}),"\n",(0,r.jsx)(n.li,{children:"History Management: This wrapper maintains a simple history of visited URLs for compatibility with the SimpleTextBrowser's API."}),"\n",(0,r.jsx)(n.li,{children:"Page Content: Selenium's page_source property provides the HTML content of the current page, making the distinction between viewport and page content less relevant."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"address-1",children:"address"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@property\ndef address() -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return the address of the current page."}),"\n",(0,r.jsx)(n.h3,{id:"viewport-1",children:"viewport"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@property\ndef viewport() -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return the content of the current viewport."}),"\n",(0,r.jsx)(n.h3,{id:"page_content-1",children:"page_content"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@property\ndef page_content() -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return the full contents of the current page."}),"\n",(0,r.jsx)(n.h3,{id:"set_address",children:"set_address"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def set_address(uri_or_path: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Navigate to a given URI and update history."}),"\n",(0,r.jsx)(n.h3,{id:"visit_page-1",children:"visit_page"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def visit_page(path_or_uri: str) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Navigate to a page and return its content."}),"\n",(0,r.jsx)(n.h3,{id:"page_down",children:"page_down"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def page_down() -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Simulate page down action."}),"\n",(0,r.jsx)(n.h3,{id:"page_up",children:"page_up"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def page_up() -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Simulate page up action."}),"\n",(0,r.jsx)(n.h3,{id:"close",children:"close"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def close()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Close the browser."}),"\n",(0,r.jsx)(n.h3,{id:"set_page_content-1",children:"set_page_content"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def set_page_content(content)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sets the text content of the current page."}),"\n",(0,r.jsx)(n.h3,{id:"download",children:"download"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def download(uri_or_path: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Download from a given URI"})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>l});var r=s(67294);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);